{
    "ast": null,
    "code": "import { Todo } from '../todo';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../todos.service\";\nimport * as i2 from \"@angular/forms\";\nexport let TodoHeaderComponent = /*#__PURE__*/(() => {\n  class TodoHeaderComponent {\n    constructor(todosService) {\n      this.todosService = todosService;\n      this.newTodo = new Todo(\"\", \"\", false);\n    }\n\n    addTodo() {\n      const todoTitle = this.newTodo.title.trim();\n      if (todoTitle.length <= 0) return;\n      this.todosService.addItem(todoTitle);\n      this.newTodo = new Todo(\"\", \"\", false);\n    }\n\n  }\n\n  TodoHeaderComponent.ɵfac = function TodoHeaderComponent_Factory(t) {\n    return new (t || TodoHeaderComponent)(i0.ɵɵdirectiveInject(i1.TodosService));\n  };\n\n  TodoHeaderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TodoHeaderComponent,\n    selectors: [[\"app-todo-header\"]],\n    decls: 4,\n    vars: 1,\n    consts: [[1, \"header\"], [\"placeholder\", \"What needs to be done?\", \"autofocus\", \"\", 1, \"new-todo\", 3, \"ngModel\", \"ngModelChange\", \"keyup.enter\"]],\n    template: function TodoHeaderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"header\", 0)(1, \"h1\");\n        i0.ɵɵtext(2, \"todos\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function TodoHeaderComponent_Template_input_ngModelChange_3_listener($event) {\n          return ctx.newTodo.title = $event;\n        })(\"keyup.enter\", function TodoHeaderComponent_Template_input_keyup_enter_3_listener() {\n          return ctx.addTodo();\n        });\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.newTodo.title);\n      }\n    },\n    dependencies: [i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return TodoHeaderComponent;\n})();",
    "map": null,
    "metadata": {},
    "sourceType": "module"
}
