{
    "ast": null,
    "code": "import * as i0 from \"@angular/core\";\n\nconst uuid = () => crypto.randomUUID();\n\nexport let TodosService = /*#__PURE__*/(() => {\n  class TodosService {\n    constructor() {\n      this.todos = [];\n    }\n\n    addItem(title) {\n      const todo = {\n        id: uuid(),\n        title,\n        completed: false\n      };\n      this.todos = this.todos.concat(todo);\n    }\n\n    toggleItem(todoToToggle) {\n      this.todos = this.todos.map(todo => todo !== todoToToggle ? todo : { ...todo,\n        completed: !todo.completed\n      });\n    }\n\n    removeItem(todo) {\n      this.todos = this.todos.filter(t => t !== todo);\n    }\n\n    updateItem(todoToSave, title) {\n      this.todos = this.todos.map(todo => todo !== todoToSave ? todo : { ...todo,\n        title\n      });\n    }\n\n    clearCompleted() {\n      this.todos = this.todos.filter(todo => !todo.completed);\n    }\n\n    toggleAll(completed) {\n      this.todos = this.todos.map(todo => ({ ...todo,\n        completed\n      }));\n    }\n\n    getItems(type = \"all\") {\n      switch (type) {\n        case \"active\":\n          return this.todos.filter(todo => !todo.completed);\n\n        case \"completed\":\n          return this.todos.filter(todo => todo.completed);\n      }\n\n      return [...this.todos];\n    }\n\n  }\n\n  TodosService.ɵfac = function TodosService_Factory(t) {\n    return new (t || TodosService)();\n  };\n\n  TodosService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TodosService,\n    factory: TodosService.ɵfac,\n    providedIn: 'root'\n  });\n  return TodosService;\n})();",
    "map": null,
    "metadata": {},
    "sourceType": "module"
}
